package com.example.weathermvp.ui;import androidx.appcompat.app.AlertDialog;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.ProgressBar;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import com.example.weathermvp.R;import com.example.weathermvp.adapter.ItemAdapter;import com.example.weathermvp.customs.MainItem;import com.example.weathermvp.data.InterfaceData;import com.example.weathermvp.data.Presenter;import com.example.weathermvp.ui.DetailsActivity;import java.util.ArrayList;public class MainActivity extends AppCompatActivity implements InterfaceData {    Presenter presenter;    TextView tv;    Double lonn, latt;    Spinner spinner;    private RecyclerView mRecyclerView;    private RecyclerView.Adapter mAdapter;    private RecyclerView.LayoutManager mLayoutManager;    ArrayList<MainItem> mylist;    ArrayList<String> arrayList;    private ItemAdapter.RecyclerViewClickListener listener;    String url = "https://openweathermap.org/img/w/";    ProgressBar progressBar;    private long backPressedTime;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        getSupportActionBar().hide();        tv = findViewById(R.id.tvtv);        spinner = findViewById(R.id.spinner);        progressBar = findViewById(R.id.progressBar);        presenter = new Presenter(this);        mylist = new ArrayList<>();        setOnClickListener();        Toast.makeText(MainActivity.this,"Please, select the city",Toast.LENGTH_LONG).show();        arrayList = new ArrayList<>();        manyCities();        spinner.setAdapter(new ArrayAdapter<>(MainActivity.this,android.R.layout.simple_list_item_1,arrayList));        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                    String n = parent.getItemAtPosition(position).toString();                    tv.setText(n);                    createAlertDialg(MainActivity.this);            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });    }    private void setOnClickListener() {        listener = new ItemAdapter.RecyclerViewClickListener() {            @Override            public void onClick(View v, int position) {                Intent intent = new Intent(getApplicationContext(), DetailsActivity.class);                intent.putExtra("city",mylist.get(position).getString());                intent.putExtra("lat",latt);                intent.putExtra("lon",lonn);                startActivity(intent);            }        };    }    @Override    public void onGetCityTempInterface(String city, Double temp,String icon) {        Double d = temp/10;        int result = (int) Math.round(d);        mylist.add(new MainItem(city,result,url+icon+".png"));        mRecyclerView = findViewById(R.id.recyclerView);        mRecyclerView.setHasFixedSize(true);        mLayoutManager = new LinearLayoutManager(this);        mAdapter = new ItemAdapter(mylist,listener);        mRecyclerView.setLayoutManager(mLayoutManager);        mRecyclerView.setAdapter(mAdapter);        progressBar.setVisibility(View.GONE);    }    @Override    public void onGetLonLatInterface(Double lon, Double lat) {        lonn = lon;        latt = lat;    }    public void createAlertDialg(Context context){        AlertDialog alertDialog = new AlertDialog.Builder(this)                .setMessage("Do you want to add this city?")                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                        presenter.getCityPresenter(tv.getText().toString(), context);                        progressBar.setVisibility(View.VISIBLE);                    }                })                .setNegativeButton("No", new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                    }                }) .show();    }    public void manyCities(){        arrayList.add("Ismailia");        arrayList.add("Cairo");        arrayList.add("Alexandria");        arrayList.add("Al rebat");        arrayList.add("Riyadh");        arrayList.add("Dubai");        arrayList.add("Istanbul");        arrayList.add("London");        arrayList.add("Liverpool");        arrayList.add("Paris");        arrayList.add("Lille");        arrayList.add("Mumbai");        arrayList.add("Delhi");        arrayList.add("New york");        arrayList.add("Washington");        arrayList.add("Montreal");    }    @Override    public void onBackPressed() {        if (backPressedTime + 2000 >System.currentTimeMillis()){            super.onBackPressed();        } else {            Toast.makeText(this,"Press back again to exit page",Toast.LENGTH_SHORT).show();        }        backPressedTime = System.currentTimeMillis();    }}